---

#
# {{ ansible_managed }}
#

# Configuration file version. The current version is "v2".
version: v2

# This section of the configuration file applies to all teleport
# services.
teleport:
    nodename: {{ teleport_config_teleport_nodename }}

    # Data directory where Teleport daemon keeps its data.
    # See "Filesystem Layout" for more details
    # (https://goteleport.com/docs/admin-guide/#filesystem-layout).
    data_dir: {{ teleport_config_teleport_datadir }}

    # PID file for Teleport process
    #pid_file: /var/run/teleport.pid

    # Invitation token used to join a cluster. it is not used on
    # subsequent starts
{% if teleport_config_teleport_auth_token is not none %}
    auth_token: {{ teleport_config_teleport_auth_token }}
{% else %}
    # auth_token: MyAuthToken
{% endif %}

    # Optional CA pin of the auth server. This enables more secure way of adding new
    # nodes to a cluster. See "Adding Nodes to the Cluster"
    # (https://goteleport.com/docs/admin-guide/#adding-nodes-to-the-cluster).
{% if teleport_config_teleport_ca_pin is not none %}
    ca_pin: "{{ teleport_config_teleport_ca_pin }}"
{% else %}
    #ca_pin: "sha256:7e12c17c20d9cb504bbcb3f0236be3f446861f1396dcbb44425fe28ec1c108f1"
{% endif %}

    # When running in multi-homed or NATed environments Teleport nodes need
    # to know which IP it will be reachable at by other nodes
    #
    # This value can be specified as FQDN e.g. host.example.com
{% if teleport_config_teleport_advertise_ip is not none %}
    advertise_ip: {{ teleport_config_teleport_advertise_ip }}
{% else %}
    # advertise_ip: 10.1.0.5
{% endif %}

    # Auth Server address and port to connect to. If you configure teleport auth to run in High
    # Availability configuration the address should point to a Load Balancer.
    # If adding a node located behind NAT, use the Proxy URL. e.g.
    #  auth_servers:
    #     - teleport.com:443
    auth_servers: {{ teleport_config_teleport_auth_servers | to_yaml }}

    # For use on a Teleport Proxy
    # See the "Teleport Scalability Tweaks" of the admin manual
    # (https://goteleport.com/docs/admin-guide/#teleport-scalability-tweaks)
    #cache:
    #  # use an in-memory cache to speed up the connection of many teleport nodes
    #  # back to proxy
    #  type: in-memory
    #  enabled: true
    #  # can be "never" or a duration such as 300m (300 minutes),
    #  # 2.5h (2 and a half hours), etc. Default is 20h (twenty hours).
    #  ttl: 20h

    # Teleport throttles all connections to avoid abuse. These settings allow
    # you to adjust the default limits
    connection_limits:
        max_connections: 1000
        max_users: 250

    # Logging configuration. Possible output values to disk via '/var/lib/teleport/teleport.log',
    # 'stdout', 'stderr' and 'syslog'. Possible severity values are INFO, WARN
    # and ERROR (default).
    log:
        output: {{ teleport_config_teleport_log_output }}
        severity: {{ teleport_config_teleport_log_severity }}

        # Log format configuration
        # Possible output values are 'json' and 'text' (default).
        # Possible extra_fields values include: timestamp, component, caller, and level.
        # All extra fields are included by default.
        format:
            output: text
            extra_fields: [level, timestamp, component, caller]

    # Configuration for the storage back-end used for the cluster state and the
    # audit log. Several back-end types are supported. See the "High Availability"
    # section of the Admin Manual (https://goteleport.com/docs/admin-guide/#high-availability)
    # to learn how to configure DynamoDB, S3, etcd, and other highly available back-ends.
    storage:
        # By default teleport uses the `data_dir` directory on a local filesystem
        type: {{ teleport_config_teleport_storage_type }}

        # List of locations where the audit log events will be stored. By default,
        # they are stored in `/var/lib/teleport/log`
        # When specifying multiple destinations like this, make sure that any highly-available
        # storage methods (like DynamoDB or Firestore) are specified first, as this is what the
        # Teleport web UI uses as its source of events to display.
        audit_events_uri: {{ teleport_config_teleport_storage_audit_events_uri | to_yaml }}

        # Use this setting to configure teleport to store the recorded sessions in
        # an AWS S3 bucket or use GCP Storage with 'gs://'. See "Using Amazon S3"
        # for more information (https://goteleport.com/docs/admin-guide/#using-amazon-s3).
{% if teleport_config_teleport_storage_audit_sessions_uri is not none %}
        audit_sessions_uri: {{ teleport_config_teleport_storage_audit_sessions_uri }}
{% else %}
        # audit_sessions_uri: 's3://example.com/path/to/bucket?region=us-east-1'
{% endif %}

{% if teleport_config_teleport_storage_type == 'DynamoDB' %}
        # DynamoDB Specific Section
        # continuous_backups is used to enable continuous backups.
        continuous_backups: false

        # DynamoDB Specific Section
        # auto_scaling is used to enable (and define settings for) auto scaling.
        # default: false
        auto_scaling: false
        # minimum/maximum read capacity in units
        read_min_capacity: int
        read_max_capacity: int
        read_target_value: float
        # minimum/maximum write capacity in units
        write_min_capacity: int
        write_max_capacity: int
        write_target_value: float
{% endif %}

{% if teleport_config_teleport_ca_signature_algo is not none %}
    # CA Signing algorithm used for OpenSSH Certificates
    # Defaults to rsa-sha2-512 in 4.3 and above.
    # valid values are: ssh-rsa, rsa-sha2-256, rsa-sha2-512; ssh-rsa is SHA1
    ca_signature_algo: {{ teleport_config_teleport_ca_signature_algo }}
{% endif %}

{% if teleport_config_teleport_cyphers is not none %}
    # Cipher algorithms that the server supports. This section only needs to be
    # set if you want to override the defaults.
    ciphers: {{ teleport_config_teleport_cyphers | to_yaml }}
{% endif %}

{% if teleport_config_teleport_kex_algos is not none %}
    # Key exchange algorithms that the server supports. This section only needs
    # to be set if you want to override the defaults.
    kex_algos: {{ teleport_config_teleport_cyphers | to_yaml }}
{% endif %}

{% if teleport_config_teleport_mac_algos is not none %}
    # Message authentication code (MAC) algorithms that the server supports.
    # This section only needs to be set if you want to override the defaults.
    mac_algos: {{ teleport_config_teleport_mac_algos | to_yaml }}
{% endif %}

{% if teleport_config_teleport_ciphersuites is not none %}
    # List of the supported ciphersuites. If this section is not specified,
    # only the default ciphersuites are enabled.
    ciphersuites: {{ teleport_config_teleport_ciphersuites | to_yaml }}
{% endif %}

# This section configures the 'auth service':
auth_service:
    # Turns 'auth' role on. Default is 'yes'
    enabled: {{ teleport_config_auth_service_enabled }}

{% if teleport_config_auth_service_enabled == 'yes' %}
    # A cluster name is used as part of a signature in certificates
    # generated by this CA.
    #
    # We strongly recommend explicitly setting it to something meaningful as it
    # becomes important when configuring trust between multiple clusters.
    #
    # By default an automatically generated name is used (not recommended)
    #
    # IMPORTANT: if you change cluster_name, it will invalidate all generated
    # certificates and keys (may need to wipe out /var/lib/teleport directory)
    cluster_name: "{{ teleport_config_auth_service_cluster_name }}"

    # ProxyProtocol enables support for HAProxy proxy protocol version 1 when it is turned 'on'.
    # Verify whether the service is in front of a trusted load balancer.
    # The default value is 'on'.
    proxy_protocol: {{ teleport_config_auth_service_proxy_protocol }}

    authentication:
        # default authentication type. possible values are 'local' and 'github' for OSS
        #  and 'oidc', 'saml' and 'false' for Enterprise.
        #  only local authentication (Teleport's own user DB) & Github is supported in the open
        #  source version
        type: {{ teleport_config_auth_service_authentication_type }}

        # Sets whether local auth is enabled alongside any other authentication
        # type. Default is true. local_auth must be 'false' for FedRAMP / FIPS.
        # (https://goteleport.com/docs/enterprise/ssh-kubernetes-fedramp/)
        #local_auth: true

        # second_factor can be 'off', 'on', 'optional', 'otp', 'webauthn' or 'u2f'.
        # - 'on' requires otp and either webauthn (preferred) or u2f.
        # - 'optional' allows otp and either webauthn (preferred) or u2f.
        # - 'otp', 'webauthn' and 'u2f' require their corresponding second
        #   factor type.
        second_factor: {{ teleport_config_auth_service_authentication_second_factor }}

{% if teleport_config_auth_service_authentication_second_factor == 'on' or teleport_config_auth_service_authentication_second_factor == 'optional' or teleport_config_auth_service_authentication_second_factor == 'webauthn' %}
        # this section is used if second_factor is set to 'on', 'optional' or
        # 'webauthn'.
        webauthn:
          # public domain of the Teleport proxy, *excluding* protocol
          # (`https://`) and port number.
          #
          # IMPORTANT: rp_id must never change in the lifetime of the cluster,
          # because it's recorded in the registration data on the second factor
          # authenticator. If the rp_id changes, all existing authenticator
          # registrations will become invalid and all users who use WebAuthn as
          # the second factor will need to re-register.
          rp_id: "localhost"

          # optional allow list of certificate authorities (as local file paths
          # or in-line PEM certificate string) for [device verification](
          # https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/Attestation.html).
          # This field allows you to restrict which device models and vendors
          # you trust.
          # Devices outside of the list will be rejected during registration. By
          # default all devices are allowed.
          # If you must use attestation, consider using `attestation_denied_cas` to
          # forbid troublesome devices instead.
          attestation_allowed_cas:
          - /path/to/allowed_ca.pem
          - |
            -----BEGIN CERTIFICATE-----
            ...
            -----END CERTIFICATE-----

          # optional deny list of certificate authorities (as local file paths
          # or in-line PEM certificate string) for [device verification](
          # https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/Attestation.html).
          # This field allows you to forbid specific device models and vendors,
          # while allowing all others (provided they clear
          # `attestation_allowed_cas` as well).
          # Devices within this list will be rejected during registration. By
          # default no devices are forbidden.
          attestation_denied_cas:
          - /path/to/denied_ca.pem
          - |
            -----BEGIN CERTIFICATE-----
            ...
            -----END CERTIFICATE-----

          # if set to true, disables WebAuthn. Allows a fallback to U2F for
          # second factor modes 'on' and 'optional'.
          disabled: false
{% endif %}

{% if teleport_config_auth_service_authentication_second_factor == 'u2f' %}
        # this section is used if second_factor is set to 'u2f'
        u2f:
            # public address of the Teleport proxy, _including_ the `https://`
            # prefix. If you use a port number other than 443, include it as
            # well.
            #
            # Examples:
            # - "https://example.com" (uses default port 443)
            # - "https://example.com:443" (uses non-default port 443)
            #
            # IMPORTANT: app_id must never change in the lifetime of the
            # cluster, because it's recorded in the registration data on the
            # U2F device. If the app_id changes, all existing U2F key
            # registrations will become invalid and all users who use U2F as
            # the second factor will need to re-register.
            app_id: https://localhost:443

            # list of allowed addresses of the Teleport proxy checked during
            # authentication attempts. This list is used to prevent malicious
            # websites and proxies from requesting U2F challenges on behalf of
            # the legitimate proxy.
            facets:
            - https://localhost:443
            - https://localhost
            - localhost:443
            - localhost

            # optional list of certificate authorities (as local file paths or
            # in-line PEM certificate string) for U2F [device
            # attestation](https://fidoalliance.org/specs/fido-u2f-v1.0-nfc-bt-amendment-20150514/fido-u2f-overview.html#verifying-that-a-u2f-device-is-genuine)
            # verification. This field allows you to restrict which U2F device
            # vendors you trust. Devices from other vendors will be rejected
            # during registration. By default, any vendor is allowed.
            device_attestation_cas:
            - /path/to/u2f_ca.pem
            - |
              -----BEGIN CERTIFICATE-----
              ...
              -----END CERTIFICATE-----
{% endif %}

        # Locking mode determines how to apply lock views locally available to
        # a Teleport component; can be strict or best_effort.
        # See the "Locking mode" section for more details
        # (https://goteleport.com/docs/access-controls/guides/locking/#locking-mode).
        locking_mode: best_effort

    # IP and the port to bind to. Other Teleport nodes will be connecting to
    # this port (AKA "Auth API" or "Cluster API") to validate client
    # certificates
    listen_addr: {{ teleport_config_auth_service_listen_addr }}

    # The optional DNS name for the auth server if located behind a load balancer.
    # See the "Public Addr" section for more details
    # (https://goteleport.com/docs/admin-guide/#public-addr).
    public_addr: {{ teleport_config_auth_service_public_addr }}

    # Pre-defined tokens for adding new nodes to a cluster. Each token specifies
    # the role a new node will be allowed to assume. The more secure way to
    # add nodes is to use `tctl nodes add --ttl` command to generate auto-expiring
    # tokens.
    #
    # We recommend to use tools like `pwgen` to generate sufficiently random
    # tokens of 32+ byte length.
{% if teleport_config_auth_service_tokens | length > 0 %}
    tokens: {{ teleport_config_auth_service_tokens | to_yaml }}
{% else %}
    # tokens:
    #   - "proxy,node:xxxxx"
    #   - "auth:yyyy"
{% endif %}

    # Optional setting for configuring session recording. Possible values are:
    #    "node"  : sessions will be recorded on the node level  (the default)
    #    "node-sync" : session recordings will be streamed from node -> auth -> storage service without being stored on disk at all.
    #    "proxy" : recording on the proxy level, see "Recording Proxy Mode"
    #              (https://goteleport.com/docs/architecture/proxy/#recording-proxy-mode).
    #    "proxy-sync : session recordings will be streamed from proxy -> auth -> storage service without being stored on disk at all.
    #    "off"   : session recording is turned off
    #
    session_recording: "node"

    # This setting determines if a Teleport proxy performs strict host key checks.
    # Only applicable if session_recording=proxy, see "Recording Proxy Mode" for details
    # (https://goteleport.com/docs/architecture/proxy/#recording-proxy-mode).
    proxy_checks_host_keys: yes

    # Determines if SSH sessions to cluster nodes are forcefully terminated
    # after no activity from a client (idle client).
    # Examples: "30m", "1h" or "1h30m"
    client_idle_timeout: never

    # Send a custom message to the client when they are disconnected due to
    # inactivity. The empty string indicates that no message will be sent.
    # (Currently only supported for SSH connections)
    client_idle_timeout_message: ""

    # Determines if the clients will be forcefully disconnected when their
    # certificates expire in the middle of an active SSH session. (default is 'no')
    disconnect_expired_cert: no

    # Determines the interval at which Teleport will send keep-alive messages. The default
    # is set to 5 minutes (300 seconds) to stay lower than the common load balancer timeout
    # of 350 seconds.
    # keep_alive_count_max is the number of missed keep-alive messages before the server
    # tears down the connection to the client.
    keep_alive_interval: 5m
    keep_alive_count_max: 3

    # Determines the internal session control timeout cluster-wide. This value will
    # be used with enterprise max_connections and max_sessions. It's unlikely that
    # you'll need to change this.
    # session_control_timeout: 2m

    # Determines the routing strategy used to connect to nodes. Can be
    # 'unambiguous_match' (default), or 'most_recent'.
    routing_strategy: unambiguous_match

{# Ansible not managed #}
{% if false %}
    # License file to start auth server with. Note that this setting is ignored
    # in the Teleport Open-Source Edition and is required only for Teleport Pro, Business
    # and Enterprise subscription plans.
    #
    # The path can be either absolute or relative to the configured `data_dir`
    # and should point to the license file obtained from Teleport Download Portal.
    #
    # If not set, by default Teleport will look for the `license.pem` file in
    # the configured `data_dir` .
    license_file: /var/lib/teleport/license.pem
{% endif %}

    # Configures a banner message to be displayed to a user logging into the cluster,
    # which must be acknowledged before the user is allowed to log in. Note that will
    # be shown *before* login, so should not contain any confidential information.
    # Defaults to the empty string, implying no message or acknowledgment is required.
    message_of_the_day: ""

    # Indicates to the clients whether the cluster is running in TLS routing mode
    # with all protocols multiplexed on the proxy's web_listen_addr.
    #
    # Possible values are:
    #
    # "multiplex": clients will be connecting to Teleport proxy's web listener
    #              in TLS routing mode.
    # "separate":  clients will be connecting to Teleport proxy's individual
    #              listeners: tunnel_listen_addr, mysql_listen_addr, etc.
    #
    # See "TLS Routing" in Architecture section for additional information.
    proxy_listener_mode: multiplex
{% endif %}

# This section configures the 'node service':
ssh_service:
    # Turns 'ssh' role on. Default is 'yes'
    enabled: {{ teleport_config_ssh_service_enabled }}

{% if teleport_config_ssh_service_enabled == 'yes' %}
    # IP and the port for SSH service to bind to.
    listen_addr: {{ teleport_config_ssh_service_listen_addr }}

    # The optional public address the SSH service. This is useful if administrators
    # want to allow users to connect to nodes directly, bypassing a Teleport proxy.
    # See the "Public Addr" section for more details
    # (https://goteleport.com/docs/admin-guide/#public-addr).
    public_addr: {{ teleport_config_ssh_service_public_addr }}

    # See explanation of labels in "Labeling Nodes and Applications" section
    # (https://goteleport.com/docs/admin-guide/#labeling-nodes-and-applications).
    labels: {{ teleport_config_ssh_service_labels | to_yaml }}

    # List of the commands to periodically execute. Their output will be used as node labels.
    # See "Labeling Nodes" section for more information and more examples
    # (https://goteleport.com/docs/admin-guide/#labeling-nodes-and-applications).
{% if teleport_config_ssh_service_commands | length > 0 %}
    commands:
{{ teleport_config_ssh_service_commands | to_yaml(indent=2, width=1337) | indent(6, first=True) }}
{% else %}
    commands: []
{% endif %}

    # Enables reading ~/.tsh/environment before creating a session.
    # By default it's set to false can be set true here or through the command-line flag.
    permit_user_env: {{ teleport_config_ssh_service_permit_user_env }}

    # Enhanced Session Recording
    # see https://goteleport.com/docs/features/enhanced-session-recording/
    enhanced_recording:
      # Enable or disable enhanced auditing for this node. Default value:
      # false.
      enabled: {{ teleport_config_ssh_service_enhanced_recording_enabled }}

{% if teleport_config_ssh_service_enhanced_recording_enabled %}
      # command_buffer_size is optional with a default value of 8 pages.
      command_buffer_size: 8

      # disk_buffer_size is optional with default value of 128 pages.
      disk_buffer_size: 128

      # network_buffer_size is optional with default value of 8 pages.
      network_buffer_size: 8

      # Controls where cgroupv2 hierarchy is mounted. Default value:
      # /cgroup2.
      cgroup_path: /cgroup2
{% endif %}

    # Configures PAM integration. See our PAM guide for more details
    # (https://goteleport.com/docs/features/ssh-pam/).
    pam:
      # "no" by default
      enabled: {{ teleport_config_ssh_service_pam_enabled }}
{% if teleport_config_ssh_service_pam_enabled == 'yes' %}
      # use /etc/pam.d/sshd configuration (the default)
      service_name: "sshd"
      # use the "auth" modules in the PAM config
      # "false" by default
      use_pam_auth: true
{% endif %}

    # Enables/disables TCP forwarding. Default is 'true'
    port_forwarding: {{ teleport_config_ssh_service_port_forwarding }}
{% endif %}

# This section configures the 'proxy service'
proxy_service:
    # Turns 'proxy' role on. Default is 'yes'
    enabled: {{ teleport_config_proxy_service_enabled }}

{% if teleport_config_proxy_service_enabled == "yes" %}
    # ProxyProtocol enables support for HAProxy proxy protocol version 1 when it is turned 'on'.
    # Verify whether the service is in front of a trusted load balancer.
    # The default value is 'on'.
    proxy_protocol: '{{ teleport_config_proxy_service_proxy_protocol }}'

    # SSH forwarding/proxy address. Command line (CLI) clients always begin their
    # SSH sessions by connecting to this port
    #
    # If not set, behavior depends on the config file version:
    #
    # "v2": listener is not created, SSH is multiplexed on web_listen_addr
    # "v1": defaults to 0.0.0.0:3023
{% if teleport_config_proxy_service_listen_addr is not none %}
    listen_addr: {{ teleport_config_proxy_service_listen_addr }}
{% else %}
    # listen_addr: 0.0.0.0:3023
{% endif %}

    # Reverse tunnel listening address. An auth server (CA) can establish an
    # outbound (from behind the firewall) connection to this address.
    # This will allow users of the outside CA to connect to behind-the-firewall
    # nodes.
    #
    # If not set, behavior depends on the config file version:
    #
    # "v2": listener is not created, reverse tunnel traffic is multiplexed on web_listen_addr
    # "v1": defaults to 0.0.0.0:3024
{% if teleport_config_proxy_service_tunnel_listen_addr is not none %}
    tunnel_listen_addr: {{ teleport_config_proxy_service_tunnel_listen_addr }}
{% else %}
    # tunnel_listen_addr: 0.0.0.0:3024
{% endif %}

    # The HTTPS listen address to serve the Web UI and also to authenticate the
    # command line (CLI) users via password+HOTP
    # Also handles the PostgreSQL proxy if database access is enabled.
    web_listen_addr: {{ teleport_config_proxy_service_web_listen_addr }}

    # The DNS name of the proxy HTTPS endpoint as accessible by cluster users.
    # Defaults to the proxy's hostname if not specified. If running multiple
    # proxies behind a load balancer, this name must point to the load balancer
    # See the "Public Addr" section for more details

    # (https://goteleport.com/docs/admin-guide/#public-addr).
    # If database access is enabled, Database clients will connect to the Proxy
    # over this hostname.
    # (https://goteleport.com/docs/database-access/architecture/#database-client-to-proxy)
    public_addr: {{ teleport_config_proxy_service_public_addr }}

{% if teleport_config_proxy_service_ssh_public_addr is not none %}
    # The DNS name of the proxy SSH endpoint as accessible by cluster clients.
    # Defaults to the proxy's hostname if not specified. If running multiple proxies
    # behind a load balancer, this name must point to the load balancer.
    # Use a TCP load balancer because this port uses SSH protocol.
    ssh_public_addr: '{{ teleport_config_proxy_service_ssh_public_addr }}'
{% endif %}

{% if teleport_config_proxy_service_tunnel_public_addr is not none %}
    # The DNS name of the tunnel SSH endpoint as accessible by trusted clusters and
    # nodes joining the cluster via Teleport IoT/node tunneling.
    # Defaults to the proxy's hostname if not specified. If running multiple proxies
    # behind a load balancer, this name must point to the load balancer.
    # Use a TCP load balancer because this port uses SSH protocol.
    tunnel_public_addr: '{{ teleport_config_proxy_service_tunnel_public_addr }}'
{% endif %}

{% if teleport_config_proxy_service_https_keypairs | length > 0 %}
    # TLS certificate for the HTTPS connection. Configuring these properly is
    # critical for Teleport security.
    https_keypairs:
{{ teleport_config_proxy_service_https_keypairs | to_yaml(indent=2, width=1337) | indent(6, first=True) }}
{% endif %}

    # Kubernetes proxy listen address.
    #
    # If not set, behavior depends on the config file version:
    #
    # "v2": listener is not created, Kubernetes traffic is multiplexed on web_listen_addr
    # "v1": defaults to 0.0.0.0:3026
    # kube_listen_addr: 0.0.0.0:3026
    # optional: set a different public address for kubernetes access
    # kube_public_addr: kube.example.com:3026

    # MySQL proxy listen address.
    #
    # If not set, behavior depends on the config file version:
    #
    # "v2": listener is not created, MySQL traffic is multiplexed on web_listen_addr
    # "v1": defaults to 0.0.0.0:3036
    # mysql_listen_addr: "0.0.0.0:3036"

    # Postgres Proxy listener address. If provided, proxy will use a separate listener
    # instead of multiplexing Postgres protocol on web_listener_addr.
    # postgres_listen_addr: "0.0.0.0:5432"

    # Mongo Proxy listener address. If provided, proxy will use a separate listener
    # instead of multiplexing Mongo protocol on web_listener_addr.
    # mongo_listen_addr: "0.0.0.0:27017"

    # Address advertised to MySQL clients. If not set, public_addr is used.
    # mysql_public_addr: "mysql.teleport.example.com:3306"

    # Address advertised to PostgresSQL clients. If not set, public_addr is used.
    # postgres_public_addr: "postgres.teleport.example.com:443"

    # Address advertised to Mongo clients. If not set, public_addr is used.
    # mongo_public_addr: "mongo.teleport.example.com:443"

    # Get an automatic certificate from Letsencrypt.org using ACME via TLS_ALPN-01 challenge.
    # When using ACME, the cluster name must match the 'public_addr' of Teleport and
    # the 'proxy_service' must be publicly accessible over port 443.
    # Also set using the CLI command:
    # 'teleport configure --acme --acme-email=email@example.com --cluster-name=tele.example.com -o file'
    acme:
      enabled: {{ teleport_config_proxy_service_acme_enabled }}
{% if teleport_config_proxy_service_acme_enabled == 'yes' and teleport_config_proxy_service_acme_email is not none %}
      email: {{ teleport_config_proxy_service_acme_email }}
{% endif %}
{% endif %}

# This section configures the 'application service'
app_service:
    # Turns 'app' role on. Default is 'no'
    enabled: {{ teleport_config_app_service_enabled }}
{% if teleport_config_app_service_enabled == 'yes' %}
    # Teleport contains a small debug app that can be used to make sure Application
    # Access is working correctly. The app outputs JWTs so it can be useful
    # when extending your application.
    debug_app: {{ teleport_config_app_service_debug_app }}
{% if teleport_config_app_service_apps | length == 0 %}
    apps: []
{% else %}
    apps:
{{ teleport_config_app_service_apps | to_yaml(indent=2, width=1337) | indent(6, first=True) }}
{% endif %}
{% endif %}

# This section configures the 'database service'.
db_service:
  # Enables the database service. Default is "no".
  enabled: {{ teleport_config_db_service_enabled }}
{% if teleport_config_db_service_enabled == 'yes' %}
  # This section contains definitions of all databases proxied by this
  # service, it can contain multiple database instances.
{% if teleport_config_app_service_apps | length == 0 %}
  databases: []
{% else %}
  databases:
{{ teleport_config_db_service_databases | to_yaml(indent=2, width=1337) | indent(6, first=True) }}
{% endif %}
{% endif %}

# vim: ft=yaml
